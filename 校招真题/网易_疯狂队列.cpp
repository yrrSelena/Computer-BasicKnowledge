/*
题目：
小易老师是非常严厉的,它会要求所有学生在进入教室前都排成一列,并且他要求学生按照身高不递减的顺序排列。有一次,n个学生在列队的时候,小易老师正好去卫生间了。学生们终于有机会反击了,于是学生们决定来一次疯狂的队列,他们定义一个队列的疯狂值为每对相邻排列学生身高差的绝对值总和。由于按照身高顺序排列的队列的疯狂值是最小的,他们当然决定按照疯狂值最大的顺序来进行列队。现在给出n个学生的身高,请计算出这些学生列队的最大可能的疯狂值。小易老师回来一定会气得半死。
输入描述:
输入包括两行,第一行一个整数n(1 ≤ n ≤ 50),表示学生的人数
第二行为n个整数h[i](1 ≤ h[i] ≤ 1000),表示每个学生的身高
输出描述:
输出一个整数,表示n个学生列队可以获得的最大的疯狂值。
如样例所示: 
当队列排列顺序是: 25-10-40-5-25, 身高差绝对值的总和为15+30+35+20=100。
这是最大的疯狂值了。
示例1
输入
5
5 10 25 40 25
输出
100
示例2
输入
1
5
输出
0

思路：
由于最大值和最小值差的绝对值最大，自觉上认为，让最大值和最小值交替排列可能得到最大疯狂值
因此先对数据进行排序
将最大值夹在最小值和次小值中间，将最小值夹在最大值和次大值中间
... max3 min2 max1 min1 max2 min3 ...
（如何证明？）
*/
#include <iostream>
#include <cmath>
#include <algorithm>
using namespace std;
int main(){
    int n;
    cin>>n;
    int *h = new int[n];
    for(int i = 0; i< n; i++){
        cin>>h[i];
    }
    sort(h,h+n);
    int s=0,l=n-1;
    int res = abs(h[l]-h[s]);
    while(s<l){
        s++;l--;
        res += abs(h[s]-h[l+1]);
        res += abs(h[s-1]-h[l]);
    }
    cout<<res<<endl;
    return 0;
}
