01背包（ZeroOnePack）:
有N件物品和一个容量为W的背包。（每种物品均只有一件）第i件物品的重量是w[i]，价值是v[i]。
求解将哪些物品装入背包可使价值总和最大。

完全背包(CompletePack): 
有N种物品和一个容量为W的背包。（每种物品都有无限件可用）第i种物品的重量是w[i]，价值是v[i]。
求解将哪些物品装入背包可使这些物品的重量总和不超过背包容量，且价值总和最大。

多重背包(MultiplePack): 
有N种物品和一个容量为W的背包。第i种物品最多有n[i]件可用，每件费用是w[i]，价值是v[i]。
求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。

比较三个题目，会发现不同点在于每种背包的数量：
01背包是每种只有一件，
完全背包是每种无限件，
多重背包是每种有限件。

//------------------0-1背包-----------------
for(int i=0;i<n;i++)
{
    for(int j=W;j>=w[i];j--)
    {
        dp[j]=max(dp[j],dp[j-w[i]]+v[i]);
    }
}
//函数形式：
void ZeroOnePack(int w,int v)
{   
    for(int i = W;i>=w;i--)  
    {  
        dp[i] = max(dp[i],dp[i-w]+v);  
    }  
}  

//----------------完全背包-----------------
for(int i=0;i<n;i++)
{
    for(int j=w[i];j<=W;j++)
    {
        dp[j]=max(dp[j],dp[j-w[i]]+v[i]);
    }
}
//函数形式：
void CompletePack(int w,int v) 
{    
    for(int i = w;i<=W;i++)  
    {  
        dp[i] = max(dp[i],dp[i-w]+v);  
    }  
} 
